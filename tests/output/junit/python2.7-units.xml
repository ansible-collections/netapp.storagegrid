<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="0" hostname="7c7ca3962b30" name="pytest" skipped="0" tests="115" time="2.640" timestamp="2021-10-26T21:07:00.418193"><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="227" name="test_create_na_sg_grid_account_pass" time="0.011"><system-out>Info: test_create_na_sg_tenant_account_pass: {&apos;msg&apos;: &apos;Tenant Account created&apos;, &apos;resp&apos;: [{&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="361" name="test_delete_na_sg_grid_account_pass" time="0.009"><system-out>Info: test_create_na_sg_tenant_account_pass: {&apos;msg&apos;: &apos;Tenant Account deleted&apos;, &apos;resp&apos;: None, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="205" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="246" name="test_idempotent_create_na_sg_grid_account_pass" time="0.011"><system-out>Info: test_idempotent_create_na_sg_tenant_account_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="339" name="test_set_na_sg_grid_account_root_password_pass" time="0.009"><system-out>Info: test_set_na_sg_grid_account_root_password_pass: {&apos;msg&apos;: &apos;Tenant Account root password updated&apos;, &apos;resp&apos;: {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="215" name="test_module_fail_when_required_args_present" time="0.010"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="265" name="test_update_na_sg_grid_account_pass" time="0.010"><system-out>Info: test_update_na_sg_tenant_account_pass: {&apos;msg&apos;: &apos;Tenant Account updated&apos;, &apos;resp&apos;: {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: 10737418240}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="311" name="test_update_na_sg_grid_account_and_set_password_pass" time="0.011"><system-out>Info: test_update_na_sg_grid_account_and_set_password_pass: {&apos;msg&apos;: &apos;Tenant Account updated; Tenant Account root password updated&apos;, &apos;resp&apos;: {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: 21474836480}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="328" name="test_delete_na_sg_storage_api_certificate_pass" time="0.008"><system-out>Info: test_delete_na_sg_storage_api_certificate_pass: {&apos;msg&apos;: &apos;Grid storage-api-certificate removed&apos;, &apos;resp&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: None}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="265" name="test_module_fail_when_required_args_missing" time="0.006"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url, type
</system-out></testcase><testcase classname="test_na_sg_grid_account.TestMyModule" file="test_na_sg_grid_account.py" line="287" name="test_update_na_sg_grid_account_quota_pass" time="0.009"><system-out>Info: test_create_na_sg_tenant_account_pass: {&apos;msg&apos;: &apos;Tenant Account updated&apos;, &apos;resp&apos;: {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: 21474836480}, &apos;name&apos;: &apos;TestTenantAccount&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="281" name="test_set_na_sg_grid_storage_api_certificate_pass" time="0.008"><system-out>Info: test_set_na_sg_grid_storage_api_certificate_pass: {&apos;msg&apos;: &apos;Grid storage-api-certificate updated&apos;, &apos;resp&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIICyDCCAbACCQCgFntI3q7iADANBgkqhkiG9w0BAQsFADAmMQswCQYDVQQGEwJV\nUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5jb20wHhcNMjEwNDI5MDQ1NTM1WhcNMjIw\nNDI5MDQ1NTM1WjAmMQswCQYDVQQGEwJVUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5j\nb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0LMcJUdWmTtxi7U7B\nyldDRfyCD9W+QJ1Ygm7E9iFwvkThUCV5q+DIcgSfogoSKaQuHaImLXMZn36QC22n\n+Ah2EGrQiggyny3wDzuWf5/Qg7ogqQRqiespBFLlV4RGCREHK0y5uq8mzpIaQ8l8\nSTa7nLS7BIc6rD15BJaNWZpDVHIzhljlnhfnqwio/ZfP++lAjk4/j8pPGPEEI5Fe\nWxhOtQjr7xTHeJxKHp2VKiLEvFxniL3qk4uJ3k5fJ7IqALUEPWH92brFp2IkObUA\nEGsZYB4KFV7asBVhGuspYNzUQ6NqWbEUmtTjKEXcb1TA8RK+Pc2TotOrQ2E7Z+rU\ngl2fAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAD5PW1WI7GCfxLQjaitnXpD1MR2O\n6b5csymPYwRejMsSswd8egjs+vO2pbF9TptLjqGliE9XUoI+mWpuMzzd75F0jcjq\n1DhlINgAmjUJEAg0RAqce0Kn8xQF+SofMtkOH+nZm3Q9nbTJKr1H5m2TnCq3v5TH\nQo0ASf0LLGgrwUtT0IghdSttYLS89dJprZ6c5wK7qeBzxfdHxxjiaSnvByL2Ryn5\ncec9lptYKoRY42hWvkQv9Wkr3DDoyNA3xPdZJr0Hpf8/mSPnt9r/AR8E32xi0SXp\nhOMTDgMicbK82ycxz0yW88gm6yhrChlJrWaEsVGod3FU+lbMAnagYZ/Vwp8=\n-----END CERTIFICATE-----\n&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="296" name="test_idempotent_set_na_sg_grid_storage_api_certificate_pass" time="0.010"><system-out>Info: test_idempotent_set_na_sg_grid_storage_api_certificate_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIICyDCCAbACCQCgFntI3q7iADANBgkqhkiG9w0BAQsFADAmMQswCQYDVQQGEwJV\nUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5jb20wHhcNMjEwNDI5MDQ1NTM1WhcNMjIw\nNDI5MDQ1NTM1WjAmMQswCQYDVQQGEwJVUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5j\nb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0LMcJUdWmTtxi7U7B\nyldDRfyCD9W+QJ1Ygm7E9iFwvkThUCV5q+DIcgSfogoSKaQuHaImLXMZn36QC22n\n+Ah2EGrQiggyny3wDzuWf5/Qg7ogqQRqiespBFLlV4RGCREHK0y5uq8mzpIaQ8l8\nSTa7nLS7BIc6rD15BJaNWZpDVHIzhljlnhfnqwio/ZfP++lAjk4/j8pPGPEEI5Fe\nWxhOtQjr7xTHeJxKHp2VKiLEvFxniL3qk4uJ3k5fJ7IqALUEPWH92brFp2IkObUA\nEGsZYB4KFV7asBVhGuspYNzUQ6NqWbEUmtTjKEXcb1TA8RK+Pc2TotOrQ2E7Z+rU\ngl2fAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAD5PW1WI7GCfxLQjaitnXpD1MR2O\n6b5csymPYwRejMsSswd8egjs+vO2pbF9TptLjqGliE9XUoI+mWpuMzzd75F0jcjq\n1DhlINgAmjUJEAg0RAqce0Kn8xQF+SofMtkOH+nZm3Q9nbTJKr1H5m2TnCq3v5TH\nQo0ASf0LLGgrwUtT0IghdSttYLS89dJprZ6c5wK7qeBzxfdHxxjiaSnvByL2Ryn5\ncec9lptYKoRY42hWvkQv9Wkr3DDoyNA3xPdZJr0Hpf8/mSPnt9r/AR8E32xi0SXp\nhOMTDgMicbK82ycxz0yW88gm6yhrChlJrWaEsVGod3FU+lbMAnagYZ/Vwp8=\n-----END CERTIFICATE-----\n&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="204" name="test_add_na_sg_grid_dns_servers_pass" time="0.009"><system-out>Info: test_add_na_sg_grid_dns_servers_pass: {&apos;msg&apos;: &apos;Grid DNS updated&apos;, &apos;resp&apos;: [&apos;10.11.12.5&apos;, &apos;10.11.12.6&apos;, &apos;10.11.12.7&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="272" name="test_module_pass_when_required_args_present" time="0.008"><system-out>Info: test_module_pass_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="145" name="test_module_fail_when_required_args_missing" time="0.006"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_grid_certificate.TestMyModule" file="test_na_sg_grid_certificate.py" line="309" name="test_update_na_sg_grid_storage_api_certificate_pass" time="0.012"><system-out>Info: test_update_na_sg_grid_storage_api_certificate_pass: {&apos;msg&apos;: &apos;Grid storage-api-certificate updated&apos;, &apos;resp&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIICzjCCAbYCCQDZVi1OT89SAjANBgkqhkiG9w0BAQsFADApMQswCQYDVQQGEwJV\nUzEaMBgGA1UEAwwRczMubmV3ZXhhbXBsZS5jb20wHhcNMjEwNDI5MDQ1NzIxWhcN\nMjIwNDI5MDQ1NzIxWjApMQswCQYDVQQGEwJVUzEaMBgGA1UEAwwRczMubmV3ZXhh\nbXBsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmg37q2sjZ\nk+HsXtai3PSMtGUiqij04JtG9ahMqIejuxy5sDCWnigh//NjdK+wPYc2VfYd6KFA\nUk9rP84M7sqdqGzIzmyEu7INyCnlbxcXlST6UZDsZnVU7Gk2GvUzk2OoO5N+G0oI\nLfc/3eKTx9j9BguOaWUy+ni+Te8j6EwK6HolGRBjLYqf1SYFBzaoVpy7pmzaFZ4R\n10jFSxHbotIZ+kR8pPE5jGkP8OjOfrpbhEgmffpeq2MSCMRuhRtRiVp4ULwkMTRN\ntFj89mu1gl9T3lYM/LO1SmBv3il0mNmrTL+99UJ4s2eL0zr/uHAVYJcVqFgWP7X8\nWnOk+d86b0TXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFmGV3IOuNYeM3LQxls+\n/CNHznvIqvoiJOWq0S7LFy1eO7PVzCl3l/fDKjGMt2lGXeU89YKdFVPqsainNEFT\ncNEWlezVut+/CWQpBXujyBqPLkYbzyGsakMImDb+MrSkBO5MCjlt38vppm5a97fB\n9o/wM31e+N6gJLiHWs0XB9TK6bY9CvcutcGUOH/oxH1TEBgrJ3SoS7/HmZJSaCQA\nhjZappzuEpGVXT8YDlb67PzUoE2rDWjdSFRXCk/0U6VR0xNgnN1WtfHaypU71DrB\nzxbDaOIZoDp5G4OgjkFxoCoSWLant+LsqEwclIbCFgEvJPE8855UThelTHmIfivP\nveI=\n-----END CERTIFICATE-----\n&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="223" name="test_remove_na_sg_grid_dns_servers_pass" time="0.010"><system-out>Info: test_remove_na_sg_grid_dns_servers_pass: {&apos;msg&apos;: &apos;Grid DNS updated&apos;, &apos;resp&apos;: [&apos;10.11.12.5&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="186" name="test_idempotent_set_na_sg_grid_dns_servers_pass" time="0.009"><system-out>Info: test_idempotent_set_na_sg_grid_dns_servers_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: [&apos;10.11.12.5&apos;, &apos;10.11.12.6&apos;], &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="354" name="test_create_na_sg_grid_gateway_port_pass" time="0.009"><system-out>Info: test_create_na_sg_grid_gateway_port_pass: {&apos;msg&apos;: &apos;Load Balancer Gateway Port Created&apos;, &apos;resp&apos;: {&apos;plaintextCertData&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIICyDCCAbACCQCgFntI3q7iADANBgkqhkiG9w0BAQsFADAmMQswCQYDVQQGEwJV\nUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5jb20wHhcNMjEwNDI5MDQ1NTM1WhcNMjIw\nNDI5MDQ1NTM1WjAmMQswCQYDVQQGEwJVUzEXMBUGA1UEAwwOczMuZXhhbXBsZS5j\nb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0LMcJUdWmTtxi7U7B\nyldDRfyCD9W+QJ1Ygm7E9iFwvkThUCV5q+DIcgSfogoSKaQuHaImLXMZn36QC22n\n+Ah2EGrQiggyny3wDzuWf5/Qg7ogqQRqiespBFLlV4RGCREHK0y5uq8mzpIaQ8l8\nSTa7nLS7BIc6rD15BJaNWZpDVHIzhljlnhfnqwio/ZfP++lAjk4/j8pPGPEEI5Fe\nWxhOtQjr7xTHeJxKHp2VKiLEvFxniL3qk4uJ3k5fJ7IqALUEPWH92brFp2IkObUA\nEGsZYB4KFV7asBVhGuspYNzUQ6NqWbEUmtTjKEXcb1TA8RK+Pc2TotOrQ2E7Z+rU\ngl2fAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAD5PW1WI7GCfxLQjaitnXpD1MR2O\n6b5csymPYwRejMsSswd8egjs+vO2pbF9TptLjqGliE9XUoI+mWpuMzzd75F0jcjq\n1DhlINgAmjUJEAg0RAqce0Kn8xQF+SofMtkOH+nZm3Q9nbTJKr1H5m2TnCq3v5TH\nQo0ASf0LLGgrwUtT0IghdSttYLS89dJprZ6c5wK7qeBzxfdHxxjiaSnvByL2Ryn5\ncec9lptYKoRY42hWvkQv9Wkr3DDoyNA3xPdZJr0Hpf8/mSPnt9r/AR8E32xi0SXp\nhOMTDgMicbK82ycxz0yW88gm6yhrChlJrWaEsVGod3FU+lbMAnagYZ/Vwp8=\n-----END CERTIFICATE-----\n&apos;, &apos;metadata&apos;: {&apos;serverCertificateDetails&apos;: {&apos;fingerPrints&apos;: {&apos;SHA-1&apos;: &apos;A4:F9:74:BE:E8:A2:46:C2:E1:23:DE:8F:A8:1B:F1:C4:91:51:C5:56&apos;, &apos;SHA-256&apos;: &apos;7B:65:7F:CD:35:8F:33:1C:C8:2D:F0:C1:9F:58:2F:2B:3B:78:44:95:4E:23:8C:1B:2B:91:6C:94:B0:71:64:E8&apos;}, &apos;subjectAltNames&apos;: [&apos;DNS:*.test.com&apos;], &apos;notBefore&apos;: &apos;2021-09-27T12:39:17.000Z&apos;, &apos;serialNumber&apos;: &apos;32:6F:20:EB:0E:90:60:7E:07:8F:6E:CC:02:2D:7C:37:3D:AB:42:7E&apos;, &apos;notAfter&apos;: &apos;2023-09-27T12:39:17.000Z&apos;, &apos;subject&apos;: &apos;/CN=test&apos;, &apos;issuer&apos;: &apos;/CN=test&apos;}}}, &apos;displayName&apos;: &apos;ansibletest-secure&apos;, &apos;secure&apos;: True, &apos;enableIPv6&apos;: True, &apos;enableIPv4&apos;: True, &apos;port&apos;: 10443, &apos;certSource&apos;: &apos;plaintext&apos;, &apos;id&apos;: &apos;e777d415-057f-4d37-9b0c-6d132d872ea0&apos;, &apos;defaultServiceType&apos;: &apos;s3&apos;, &apos;accountId&apos;: &apos;0&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="155" name="test_module_fail_when_required_args_present" time="0.007"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="369" name="test_idempotent_create_na_sg_grid_gateway_port_pass" time="0.012"><system-out>Info: test_idempotent_create_na_sg_grid_gateway_port_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_dns.TestMyModule" file="test_na_sg_grid_dns.py" line="167" name="test_set_na_sg_grid_dns_servers_pass" time="0.010"><system-out>Info: test_set_na_sg_grid_dns_servers_pass: {&apos;msg&apos;: &apos;Grid DNS updated&apos;, &apos;resp&apos;: [&apos;10.11.12.5&apos;, &apos;10.11.12.6&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="345" name="test_module_pass_when_required_args_present" time="0.010"><system-out>Info: test_module_pass_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="404" name="test_delete_na_sg_grid_gateway_port_pass" time="0.011"><system-out>Info: test_delete_na_sg_grid_gateway_port_pass: {&apos;msg&apos;: &apos;Load Balancer Gateway Port Deleted&apos;, &apos;resp&apos;: {}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="238" name="test_create_na_sg_grid_group_pass" time="0.013"><system-out>Info: test_create_na_sg_grid_group_pass: {&apos;msg&apos;: &apos;Grid Group created&apos;, &apos;resp&apos;: {&apos;displayName&apos;: &apos;TestGridGroup&apos;, &apos;policies&apos;: {&apos;management&apos;: {&apos;tenantAccounts&apos;: True, &apos;metricsQuery&apos;: True, &apos;maintenance&apos;: True}}, &apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;group/testgridgroup&apos;, &apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testgridgroup&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="338" name="test_module_fail_when_required_args_missing" time="0.009"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url, port
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="299" name="test_delete_na_sg_grid_group_pass" time="0.012"><system-out>Info: test_delete_na_sg_grid_group_pass: {&apos;msg&apos;: &apos;Grid Group deleted&apos;, &apos;resp&apos;: {&apos;displayName&apos;: &apos;TestGridGroup&apos;, &apos;policies&apos;: {&apos;management&apos;: {&apos;tenantAccounts&apos;: True, &apos;metricsQuery&apos;: True, &apos;maintenance&apos;: True}}, &apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;group/testgridgroup&apos;, &apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testgridgroup&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_gateway.TestMyModule" file="test_na_sg_grid_gateway.py" line="385" name="test_update_na_sg_grid_gateway_certificate_pass" time="0.011"><system-out>Info: test_update_na_sg_grid_gateway_certificate_pass: {&apos;msg&apos;: &apos;Load Balancer Gateway Port Updated&apos;, &apos;resp&apos;: {&apos;plaintextCertData&apos;: {&apos;caBundleEncoded&apos;: None, &apos;serverCertificateEncoded&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIICzjCCAbYCCQDZVi1OT89SAjANBgkqhkiG9w0BAQsFADApMQswCQYDVQQGEwJV\nUzEaMBgGA1UEAwwRczMubmV3ZXhhbXBsZS5jb20wHhcNMjEwNDI5MDQ1NzIxWhcN\nMjIwNDI5MDQ1NzIxWjApMQswCQYDVQQGEwJVUzEaMBgGA1UEAwwRczMubmV3ZXhh\nbXBsZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmg37q2sjZ\nk+HsXtai3PSMtGUiqij04JtG9ahMqIejuxy5sDCWnigh//NjdK+wPYc2VfYd6KFA\nUk9rP84M7sqdqGzIzmyEu7INyCnlbxcXlST6UZDsZnVU7Gk2GvUzk2OoO5N+G0oI\nLfc/3eKTx9j9BguOaWUy+ni+Te8j6EwK6HolGRBjLYqf1SYFBzaoVpy7pmzaFZ4R\n10jFSxHbotIZ+kR8pPE5jGkP8OjOfrpbhEgmffpeq2MSCMRuhRtRiVp4ULwkMTRN\ntFj89mu1gl9T3lYM/LO1SmBv3il0mNmrTL+99UJ4s2eL0zr/uHAVYJcVqFgWP7X8\nWnOk+d86b0TXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFmGV3IOuNYeM3LQxls+\n/CNHznvIqvoiJOWq0S7LFy1eO7PVzCl3l/fDKjGMt2lGXeU89YKdFVPqsainNEFT\ncNEWlezVut+/CWQpBXujyBqPLkYbzyGsakMImDb+MrSkBO5MCjlt38vppm5a97fB\n9o/wM31e+N6gJLiHWs0XB9TK6bY9CvcutcGUOH/oxH1TEBgrJ3SoS7/HmZJSaCQA\nhjZappzuEpGVXT8YDlb67PzUoE2rDWjdSFRXCk/0U6VR0xNgnN1WtfHaypU71DrB\nzxbDaOIZoDp5G4OgjkFxoCoSWLant+LsqEwclIbCFgEvJPE8855UThelTHmIfivP\nveI=\n-----END CERTIFICATE-----\n&apos;, &apos;metadata&apos;: {&apos;serverCertificateDetails&apos;: {&apos;fingerPrints&apos;: {&apos;SHA-1&apos;: &apos;F2:C2:6F:A8:45:DA:86:09:91:F5:04:B0:25:43:B7:FC:FA:C1:43:F8&apos;, &apos;SHA-256&apos;: &apos;99:3E:21:1A:03:25:69:C8:0A:D5:FE:E3:FB:6E:51:03:BD:A7:0E:88:6B:53:06:04:92:3B:34:17:68:43:F7:2F&apos;}, &apos;subjectAltNames&apos;: [&apos;DNS:*.test.com&apos;], &apos;notBefore&apos;: &apos;2021-09-27T12:39:17.000Z&apos;, &apos;serialNumber&apos;: &apos;32:6F:20:EB:0E:90:60:7E:07:8F:6E:CC:02:2D:7C:37:3D:AB:42:7E&apos;, &apos;notAfter&apos;: &apos;2023-09-27T12:39:17.000Z&apos;, &apos;subject&apos;: &apos;/CN=test&apos;, &apos;issuer&apos;: &apos;/CN=test&apos;}}}, &apos;displayName&apos;: &apos;ansibletest-secure&apos;, &apos;secure&apos;: True, &apos;enableIPv6&apos;: True, &apos;enableIPv4&apos;: True, &apos;id&apos;: &apos;e777d415-057f-4d37-9b0c-6d132d872ea0&apos;, &apos;accountId&apos;: &apos;0&apos;, &apos;port&apos;: 10443, &apos;defaultServiceType&apos;: &apos;s3&apos;, &apos;certSource&apos;: &apos;plaintext&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="257" name="test_idempotent_create_na_sg_grid_group_pass" time="0.009"><system-out>Info: test_idempotent_create_na_sg_grid_group_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;displayName&apos;: &apos;TestGridGroup&apos;, &apos;policies&apos;: {&apos;management&apos;: {&apos;tenantAccounts&apos;: True, &apos;metricsQuery&apos;: True, &apos;maintenance&apos;: True}}, &apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;group/testgridgroup&apos;, &apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testgridgroup&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="309" name="test_set_na_sg_grid_identity_federation_tls_pass" time="0.011"><system-out>Info: test_set_na_sg_grid_identity_federation_pass: {&apos;msg&apos;: &apos;Grid identity federation updated&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: False, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 636, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIIF+DCCBOCgAwIBAgITRwAAAAIg5KzMrJo+kQAAAAAAAjANBgkqhkiG9w0BAQUF\nADBlMRIwEAYKCZImiZPyLGQBGRYCYXUxFjAUBgoJkiaJk/IsZAEZFgZuZXRhcHAx\nFjAUBgoJkiaJk/IsZAEZFgZhdXNuZ3MxHzAdBgNVBAMTFmF1c25ncy1NRUxOR1NE\nQzAxLUNBLTEwHhcNMjEwMjExMDkzMTIwWhcNMjMwMjExMDk0MTIwWjAAMIIBIjAN\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt2xPi4FS4Uc37KrDLEXXUoc4lhhT\nuQmMnLc0PYZCIpzYOaosFIeGqco3woiC7wSZJ2whKE4RDcxxgE+azuGiSWVjIxIL\nAimmcDhFid/T3KRN5jmkjBzUKuPBYzZBFih8iU9056rqgN7eMKQYjRwPeV0+AeiB\nirw46OgkwVQu3shEUtXxZPP2Mb6Md23+4vSmcElUcW28Opt2q/M5fs7DNomG3eaG\n-----END CERTIFICATE-----\n&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: True}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="204" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url, unique_name
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="216" name="test_module_fail_when_required_args_missing" time="0.006"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: auth_token
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="238" name="test_module_pass_when_optional_args_present" time="0.007"><system-out>Info: test_module_pass_when_optional_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="214" name="test_module_fail_when_required_args_present" time="0.008"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="226" name="test_module_pass_when_required_args_present" time="0.009"><system-out>Info: test_module_pass_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="226" name="test_module_fail_with_bad_unique_name" time="0.016"><system-out>Info: test_module_fail_with_bad_unique_name: unique_name must begin with &apos;group/&apos; or &apos;federated-group/&apos;
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="250" name="test_run_sg_gather_facts_for_all_info_pass" time="0.010"><system-out>Info: test_run_sg_gather_facts_for_all_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;grid/users&apos;: {&apos;data&apos;: [{&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::0:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;0&apos;}]}, &apos;grid/ilm-criteria&apos;: {&apos;data&apos;: []}, &apos;grid/config/product-version&apos;: {&apos;data&apos;: {}}, &apos;grid/license&apos;: {&apos;data&apos;: []}, &apos;grid/expansion&apos;: {&apos;data&apos;: {}}, &apos;grid/grid-networks&apos;: {&apos;data&apos;: []}, &apos;grid/deactivated-features&apos;: {&apos;data&apos;: {}}, &apos;grid/regions&apos;: {&apos;data&apos;: []}, &apos;grid/ilm-policies&apos;: {&apos;data&apos;: []}, &apos;grid/ilm-rules&apos;: {&apos;data&apos;: []}, &apos;grid/audit&apos;: {&apos;data&apos;: {}}, &apos;grid/storage-api-certificate&apos;: {&apos;data&apos;: {}}, &apos;grid/compliance-global&apos;: {&apos;data&apos;: {}}, &apos;grid/dns-servers&apos;: {&apos;data&apos;: []}, &apos;grid/domain-names&apos;: {&apos;data&apos;: []}, &apos;grid/health&apos;: {&apos;data&apos;: {}}, &apos;grid/groups&apos;: {&apos;data&apos;: []}, &apos;grid/expansion/sites&apos;: {&apos;data&apos;: []}, &apos;grid/schemes&apos;: {&apos;data&apos;: []}, &apos;grid/management-certificate&apos;: {&apos;data&apos;: {}}, &apos;grid/expansion/nodes&apos;: {&apos;data&apos;: []}, &apos;grid/identity-source&apos;: {&apos;data&apos;: {}}, &apos;grid/alarms&apos;: {&apos;data&apos;: []}, &apos;grid/health/topology&apos;: {&apos;data&apos;: {}}, &apos;grid/snmp&apos;: {&apos;data&apos;: {}}, &apos;grid/ntp-servers&apos;: {&apos;data&apos;: []}, &apos;grid/ec-profiles&apos;: {&apos;data&apos;: []}, &apos;grid/untrusted-client-network&apos;: {&apos;data&apos;: {}}, &apos;grid/recovery&apos;: {&apos;data&apos;: []}, &apos;versions&apos;: {&apos;data&apos;: [2, 3]}, &apos;grid/config&apos;: {&apos;data&apos;: {}}, &apos;grid/recovery/available-nodes&apos;: {&apos;data&apos;: {}}, &apos;grid/accounts&apos;: {&apos;data&apos;: [{&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount1&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567891&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount2&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567892&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount3&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567893&apos;}]}, &apos;grid/users/root&apos;: {&apos;data&apos;: {&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::0:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;0&apos;}}, &apos;grid/config/management&apos;: {&apos;data&apos;: {}}}},)
</system-out></testcase><testcase classname="test_na_sg_grid_group.TestMyModule" file="test_na_sg_grid_group.py" line="275" name="test_update_na_sg_grid_group_pass" time="0.009"><system-out>Info: test_update_na_sg_grid_group_pass: {&apos;msg&apos;: &apos;Grid Group updated&apos;, &apos;resp&apos;: {&apos;displayName&apos;: &apos;TestGridGroup&apos;, &apos;policies&apos;: {&apos;management&apos;: {&apos;tenantAccounts&apos;: True, &apos;ilm&apos;: True, &apos;metricsQuery&apos;: False, &apos;maintenance&apos;: True}}, &apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;group/testgridgroup&apos;, &apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testgridgroup&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="348" name="test_run_sg_gather_facts_for_grid_accounts_and_grid_users_root_info_pass" time="0.008"><system-out>Info: test_run_sg_gather_facts_for_grid_accounts_and_grid_users_root_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;grid/accounts&apos;: {&apos;data&apos;: [{&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount1&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567891&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount2&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567892&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount3&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567893&apos;}]}, &apos;grid/users/root&apos;: {&apos;data&apos;: {&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::0:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;0&apos;}}}},)
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="339" name="test_check_mode_na_sg_grid_identity_federation_pass" time="0.009"><system-out>Info: test_check_mode_na_sg_grid_identity_federation_pass: {&apos;msg&apos;: &apos;Connection test successful&apos;, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_info.TestMyModule" file="test_na_sg_grid_info.py" line="334" name="test_run_sg_gather_facts_for_grid_accounts_info_pass" time="0.009"><system-out>Info: test_run_sg_gather_facts_for_grid_accounts_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;grid/accounts&apos;: {&apos;data&apos;: [{&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount1&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567891&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount2&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567892&apos;}, {&apos;policy&apos;: {&apos;allowPlatformServices&apos;: False, &apos;useAccountIdentitySource&apos;: True, &apos;quotaObjectBytes&apos;: None}, &apos;name&apos;: &apos;TestTenantAccount3&apos;, &apos;capabilities&apos;: [&apos;management&apos;, &apos;s3&apos;], &apos;id&apos;: &apos;12345678901234567893&apos;}]}}},)
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="293" name="test_idempotent_set_na_sg_grid_identity_federation_pass" time="0.009"><system-out>Info: test_idempotent_set_na_sg_grid_identity_federation_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="220" name="test_add_na_sg_grid_ntp_servers_pass" time="0.009"><system-out>Info: test_add_na_sg_grid_ntp_servers_pass: {&apos;msg&apos;: &apos;Grid NTP updated&apos;, &apos;resp&apos;: [&apos;123.12.3.123&apos;, &apos;123.1.23.123&apos;, &apos;12.3.12.3&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="263" name="test_module_fail_when_required_args_missing" time="0.010"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="202" name="test_idempotent_set_na_sg_grid_ntp_servers_pass" time="0.008"><system-out>Info: test_idempotent_set_na_sg_grid_ntp_servers_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: [&apos;123.12.3.123&apos;, &apos;12.3.12.3&apos;], &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="270" name="test_module_fail_when_required_args_present" time="0.008"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="161" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url, passphrase
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="323" name="test_remove_na_sg_grid_identity_federation_pass" time="0.009"><system-out>Info: test_remove_na_sg_grid_identity_federation_pass: {&apos;msg&apos;: &apos;Grid identity federation disabled&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: True, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="171" name="test_module_fail_when_required_args_present" time="0.009"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_identity_federation.TestMyModule" file="test_na_sg_grid_identity_federation.py" line="279" name="test_set_na_sg_grid_identity_federation_pass" time="0.010"><system-out>Info: test_set_na_sg_grid_identity_federation_pass: {&apos;msg&apos;: &apos;Grid identity federation updated&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="239" name="test_remove_na_sg_grid_ntp_servers_pass" time="0.010"><system-out>Info: test_remove_na_sg_grid_ntp_servers_pass: {&apos;msg&apos;: &apos;Grid NTP updated&apos;, &apos;resp&apos;: [&apos;123.12.3.123&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="275" name="test_create_na_sg_grid_user_no_group_pass" time="0.009"><system-out>Info: test_create_na_sg_grid_user_no_group_pass: {&apos;msg&apos;: &apos;Grid User created&apos;, &apos;resp&apos;: {&apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;federated&apos;: False, &apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="294" name="test_create_na_sg_grid_user_pass" time="0.010"><system-out>Info: test_create_na_sg_grid_user_pass: {&apos;msg&apos;: &apos;Grid User created&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_ntp.TestMyModule" file="test_na_sg_grid_ntp.py" line="183" name="test_set_na_sg_grid_ntp_servers_pass" time="0.009"><system-out>Info: test_set_na_sg_grid_ntp_servers_pass: {&apos;msg&apos;: &apos;Grid NTP updated&apos;, &apos;resp&apos;: [&apos;123.12.3.123&apos;, &apos;12.3.12.3&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="350" name="test_delete_na_sg_grid_user_pass" time="0.010"><system-out>Info: test_delete_na_sg_grid_user_pass: {&apos;msg&apos;: &apos;Grid User deleted&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_regions.TestMyModule" file="test_na_sg_grid_regions.py" line="170" name="test_idempotent_set_na_sg_grid_regions_pass" time="0.009"><system-out>Info: test_idempotent_set_na_sg_grid_regions_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: [&apos;us-east-1&apos;, &apos;us-west-1&apos;], &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="463" name="test_fail_set_federated_user_password" time="0.008"><system-out>Info: test_fail_set_federated_user_password: {&apos;msg&apos;: &apos;password cannot be set for a federated user&apos;, &apos;failed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_regions.TestMyModule" file="test_na_sg_grid_regions.py" line="129" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="390" name="test_idempotent_create_na_sg_grid_user_and_set_password_pass" time="0.009"><system-out>Info: test_idempotent_create_na_sg_grid_user_and_set_password_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_regions.TestMyModule" file="test_na_sg_grid_regions.py" line="139" name="test_module_fail_when_required_args_present" time="0.009"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="311" name="test_idempotent_create_na_sg_grid_user_pass" time="0.011"><system-out>Info: test_idempotent_create_na_sg_grid_user_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_grid_regions.TestMyModule" file="test_na_sg_grid_regions.py" line="188" name="test_remove_na_sg_grid_regions_pass" time="0.010"><system-out>Info: test_remove_na_sg_grid_regions_pass: {&apos;msg&apos;: &apos;Grid Regions updated&apos;, &apos;resp&apos;: [&apos;us-east-1&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="228" name="test_module_fail_when_required_args_missing" time="0.008"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: unique_name
</system-out></testcase><testcase classname="test_na_sg_grid_regions.TestMyModule" file="test_na_sg_grid_regions.py" line="151" name="test_set_na_sg_grid_regions_pass" time="0.010"><system-out>Info: test_set_na_sg_grid_regions_pass: {&apos;msg&apos;: &apos;Grid Regions updated&apos;, &apos;resp&apos;: [&apos;us-east-1&apos;, &apos;us-west-1&apos;], &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="238" name="test_module_fail_when_required_args_present" time="0.008"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="368" name="test_create_na_sg_grid_user_and_set_password_pass" time="0.011"><system-out>Info: test_create_na_sg_grid_user_and_set_password_pass: {&apos;msg&apos;: &apos;Grid User created; Grid User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="250" name="test_module_fail_with_bad_unique_name" time="0.008"><system-out>Info: test_module_fail_with_bad_unique_name: unique_name must begin with &apos;user/&apos; or &apos;federated-user/&apos;
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="137" name="test_module_fail_when_required_args_missing" time="0.009"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="439" name="test_set_na_sg_grid_user_password_pass" time="0.010"><system-out>Info: test_set_na_sg_grid_user_password_pass: {&apos;msg&apos;: &apos;Grid User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="144" name="test_module_fail_when_required_args_present" time="0.007"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="412" name="test_update_na_sg_grid_user_and_set_password_pass" time="0.010"><system-out>Info: test_update_na_sg_grid_user_and_set_password_pass: {&apos;msg&apos;: &apos;Grid User updated; Grid User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;, &apos;87654321-abcd-1234-cdef-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="180" name="test_update_na_sg_org_container_pass" time="0.009"><system-out>Info: test_update_na_sg_org_container_pass: {&apos;msg&apos;: &apos;Org Container updated&apos;, &apos;resp&apos;: {&apos;region&apos;: &apos;us-east-1&apos;, &apos;compliance&apos;: {&apos;legalHold&apos;: False, &apos;autoDelete&apos;: False}, &apos;creationTime&apos;: &apos;2020-02-04T12:43:50.777Z&apos;, &apos;name&apos;: &apos;testbucket&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_grid_user.TestMyModule" file="test_na_sg_grid_user.py" line="330" name="test_update_na_sg_grid_user_pass" time="0.010"><system-out>Info: test_update_na_sg_grid_user_pass: {&apos;msg&apos;: &apos;Grid User updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-adm-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;, &apos;87654321-abcd-1234-cdef-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testgriduser&apos;, &apos;fullName&apos;: &apos;testgriduser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="314" name="test_create_na_sg_org_group_pass" time="0.009"><system-out>Info: test_create_na_sg_org_group_pass: {&apos;msg&apos;: &apos;Org Group created&apos;, &apos;resp&apos;: {&apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testorggroup&apos;, &apos;displayName&apos;: &apos;TestOrgGroup&apos;, &apos;uniqueName&apos;: &apos;group/testorggroup&apos;, &apos;federated&apos;: False, &apos;policies&apos;: {&apos;s3&apos;: {&apos;Statement&apos;: [{&apos;Action&apos;: &apos;s3:*&apos;, &apos;Resource&apos;: &apos;arn:aws:s3:::*&apos;, &apos;Effect&apos;: &apos;Allow&apos;}]}, &apos;management&apos;: {&apos;manageAllContainers&apos;: True, &apos;manageOwnS3Credentials&apos;: True, &apos;manageEndpoints&apos;: True}}, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="153" name="test_create_na_sg_org_container_pass" time="0.011"><system-out>Info: test_create_na_sg_org_container_pass: {&apos;msg&apos;: &apos;Org Container created&apos;, &apos;resp&apos;: {&apos;region&apos;: &apos;us-east-1&apos;, &apos;creationTime&apos;: &apos;2020-02-04T12:43:50.777Z&apos;, &apos;name&apos;: &apos;testbucket&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="385" name="test_delete_na_sg_org_group_pass" time="0.009"><system-out>Info: test_delete_na_sg_org_group_pass: {&apos;msg&apos;: &apos;Org Group deleted&apos;, &apos;resp&apos;: {&apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testorggroup&apos;, &apos;displayName&apos;: &apos;TestOrgGroup&apos;, &apos;uniqueName&apos;: &apos;group/testorggroup&apos;, &apos;federated&apos;: False, &apos;policies&apos;: {&apos;s3&apos;: {&apos;Statement&apos;: [{&apos;Action&apos;: &apos;s3:*&apos;, &apos;Resource&apos;: &apos;arn:aws:s3:::*&apos;, &apos;Effect&apos;: &apos;Allow&apos;}]}, &apos;management&apos;: {&apos;manageAllContainers&apos;: True, &apos;manageOwnS3Credentials&apos;: True, &apos;manageEndpoints&apos;: True}}, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="196" name="test_delete_na_sg_org_container_pass" time="0.012"><system-out>Info: test_delete_na_sg_org_container_pass: {&apos;msg&apos;: &apos;Org Container deleted&apos;, &apos;resp&apos;: None, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="333" name="test_idempotent_create_na_sg_org_group_pass" time="0.009"><system-out>Info: test_idempotent_create_na_sg_org_group_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testorggroup&apos;, &apos;displayName&apos;: &apos;TestOrgGroup&apos;, &apos;uniqueName&apos;: &apos;group/testorggroup&apos;, &apos;federated&apos;: False, &apos;policies&apos;: {&apos;s3&apos;: {&apos;Statement&apos;: [{&apos;Action&apos;: &apos;s3:*&apos;, &apos;Resource&apos;: &apos;arn:aws:s3:::*&apos;, &apos;Effect&apos;: &apos;Allow&apos;}]}, &apos;management&apos;: {&apos;manageAllContainers&apos;: True, &apos;manageOwnS3Credentials&apos;: True, &apos;manageEndpoints&apos;: True}}, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="280" name="test_module_fail_when_required_args_missing" time="0.014"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url, unique_name
</system-out></testcase><testcase classname="test_na_sg_org_container.TestMyModule" file="test_na_sg_org_container.py" line="167" name="test_idempotent_create_na_sg_org_container_pass" time="0.009"><system-out>Info: test_idempotent_create_na_sg_org_container_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;region&apos;: &apos;us-east-1&apos;, &apos;creationTime&apos;: &apos;2020-02-04T12:43:50.777Z&apos;, &apos;name&apos;: &apos;testbucket&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="290" name="test_module_fail_when_required_args_present" time="0.008"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="293" name="test_idempotent_set_na_sg_org_identity_federation_pass" time="0.010"><system-out>Info: test_idempotent_set_na_sg_org_identity_federation_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="302" name="test_module_fail_with_bad_unique_name" time="0.008"><system-out>Info: test_module_fail_with_bad_unique_name: unique_name must begin with &apos;group/&apos; or &apos;federated-group/&apos;
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="263" name="test_module_fail_when_required_args_missing" time="0.008"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_org_group.TestMyModule" file="test_na_sg_org_group.py" line="351" name="test_update_na_sg_org_group_pass" time="0.011"><system-out>Info: test_update_na_sg_org_group_pass: {&apos;msg&apos;: &apos;Org Group updated&apos;, &apos;resp&apos;: {&apos;groupURN&apos;: &apos;urn:sgws:identity::12345678901234567890:group/testorggroup&apos;, &apos;displayName&apos;: &apos;TestOrgGroup&apos;, &apos;uniqueName&apos;: &apos;group/testorggroup&apos;, &apos;federated&apos;: False, &apos;policies&apos;: {&apos;s3&apos;: {&apos;Statement&apos;: [{&apos;Action&apos;: &apos;s3:*&apos;, &apos;Resource&apos;: &apos;arn:aws:s3:::mybucket/*&apos;, &apos;Effect&apos;: &apos;Allow&apos;}]}, &apos;management&apos;: {&apos;manageAllContainers&apos;: True, &apos;manageOwnS3Credentials&apos;: True, &apos;manageEndpoints&apos;: True}}, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="270" name="test_module_fail_when_required_args_present" time="0.009"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="339" name="test_check_mode_na_sg_org_identity_federation_pass" time="0.011"><system-out>Info: test_check_mode_na_sg_org_identity_federation_pass: {&apos;msg&apos;: &apos;Connection test successful&apos;, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="323" name="test_remove_na_sg_org_identity_federation_pass" time="0.009"><system-out>Info: test_remove_na_sg_org_identity_federation_pass: {&apos;msg&apos;: &apos;Tenant identity federation disabled&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: True, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="309" name="test_set_na_sg_org_identity_federation_tls_pass" time="0.011"><system-out>Info: test_set_na_sg_org_identity_federation_pass: {&apos;msg&apos;: &apos;Tenant identity federation updated&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: False, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 636, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;-----BEGIN CERTIFICATE-----\nMIIF+DCCBOCgAwIBAgITRwAAAAIg5KzMrJo+kQAAAAAAAjANBgkqhkiG9w0BAQUF\nADBlMRIwEAYKCZImiZPyLGQBGRYCYXUxFjAUBgoJkiaJk/IsZAEZFgZuZXRhcHAx\nFjAUBgoJkiaJk/IsZAEZFgZhdXNuZ3MxHzAdBgNVBAMTFmF1c25ncy1NRUxOR1NE\nQzAxLUNBLTEwHhcNMjEwMjExMDkzMTIwWhcNMjMwMjExMDk0MTIwWjAAMIIBIjAN\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt2xPi4FS4Uc37KrDLEXXUoc4lhhT\nuQmMnLc0PYZCIpzYOaosFIeGqco3woiC7wSZJ2whKE4RDcxxgE+azuGiSWVjIxIL\nAimmcDhFid/T3KRN5jmkjBzUKuPBYzZBFih8iU9056rqgN7eMKQYjRwPeV0+AeiB\nirw46OgkwVQu3shEUtXxZPP2Mb6Md23+4vSmcElUcW28Opt2q/M5fs7DNomG3eaG\n-----END CERTIFICATE-----\n&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: True}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_identity_federation.TestMyModule" file="test_na_sg_org_identity_federation.py" line="279" name="test_set_na_sg_org_identity_federation_pass" time="0.009"><system-out>Info: test_set_na_sg_org_identity_federation_pass: {&apos;msg&apos;: &apos;Tenant identity federation updated&apos;, &apos;resp&apos;: {&apos;username&apos;: &apos;binduser&apos;, &apos;disableTLS&apos;: True, &apos;disable&apos;: False, &apos;baseUserDn&apos;: &apos;DC=example,DC=com&apos;, &apos;password&apos;: &apos;********&apos;, &apos;port&apos;: 389, &apos;hostname&apos;: &apos;ad.example.com&apos;, &apos;baseGroupDn&apos;: &apos;DC=example,DC=com&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;ldapServiceType&apos;: &apos;Active Directory&apos;, &apos;caCert&apos;: &apos;&apos;, &apos;type&apos;: &apos;ldap&apos;, &apos;enableLDAPS&apos;: False}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="159" name="test_module_fail_when_required_args_missing" time="0.006"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: auth_token
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="193" name="test_run_sg_gather_facts_for_all_info_pass" time="0.009"><system-out>Info: test_run_sg_gather_facts_for_all_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;org/config&apos;: {&apos;data&apos;: {}}, &apos;org/containers&apos;: {&apos;data&apos;: {}}, &apos;org/identity-source&apos;: {&apos;data&apos;: {}}, &apos;versions&apos;: {&apos;data&apos;: [2, 3]}, &apos;org/endpoints&apos;: {&apos;data&apos;: []}, &apos;org/regions&apos;: {&apos;data&apos;: []}, &apos;org/config/product-version&apos;: {&apos;data&apos;: {}}, &apos;org/groups&apos;: {&apos;data&apos;: []}, &apos;org/compliance-global&apos;: {&apos;data&apos;: {}}, &apos;org/deactivated-features&apos;: {&apos;data&apos;: {}}, &apos;org/users/current-user/s3-access-keys&apos;: {&apos;data&apos;: [{&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::99846664116007910793:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;99846664116007910793&apos;}]}, &apos;org/users/root&apos;: {&apos;data&apos;: {&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::99846664116007910793:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;99846664116007910793&apos;}}, &apos;org/users&apos;: {&apos;data&apos;: {}}, &apos;org/usage&apos;: {&apos;data&apos;: []}}},)
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="181" name="test_module_pass_when_optional_args_present" time="0.007"><system-out>Info: test_module_pass_when_optional_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="249" name="test_run_sg_gather_facts_for_org_users_and_org_users_root_info_pass" time="0.009"><system-out>Info: test_run_sg_gather_facts_for_org_users_and_org_users_root_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;org/users&apos;: {&apos;data&apos;: [{&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::99846664116007910793:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;99846664116007910793&apos;}]}, &apos;org/users/root&apos;: {&apos;data&apos;: {&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::99846664116007910793:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;99846664116007910793&apos;}}}},)
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="169" name="test_module_pass_when_required_args_present" time="0.007"><system-out>Info: test_module_pass_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_org_info.TestMyModule" file="test_na_sg_org_info.py" line="235" name="test_run_sg_gather_facts_for_org_users_info_pass" time="0.009"><system-out>Info: test_run_sg_gather_facts_for_org_users_info_pass: ({&apos;changed&apos;: &apos;False&apos;, &apos;sg_info&apos;: {&apos;org/users&apos;: {&apos;data&apos;: [{&apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;root&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::99846664116007910793:root&apos;, &apos;id&apos;: &apos;00000000-0000-0000-0000-000000000000&apos;, &apos;memberOf&apos;: None, &apos;fullName&apos;: &apos;Root&apos;, &apos;federated&apos;: False, &apos;accountId&apos;: &apos;99846664116007910793&apos;}]}}},)
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="277" name="test_create_na_sg_org_user_no_group_pass" time="0.012"><system-out>Info: test_create_na_sg_org_user_no_group_pass: {&apos;msg&apos;: &apos;Org User created&apos;, &apos;resp&apos;: {&apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;federated&apos;: False, &apos;disable&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="296" name="test_create_na_sg_org_user_pass" time="0.010"><system-out>Info: test_create_na_sg_org_user_pass: {&apos;msg&apos;: &apos;Org User created&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="370" name="test_create_na_sg_org_user_and_set_password_pass" time="0.009"><system-out>Info: test_create_na_sg_org_user_and_set_password_pass: {&apos;msg&apos;: &apos;Org User created; Org User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="352" name="test_delete_na_sg_org_user_pass" time="0.009"><system-out>Info: test_delete_na_sg_org_user_pass: {&apos;msg&apos;: &apos;Org User deleted&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="463" name="test_fail_set_federated_user_password" time="0.010"><system-out>Info: test_fail_set_federated_user_password: {&apos;msg&apos;: &apos;password cannot be set for a federated user&apos;, &apos;failed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="313" name="test_idempotent_create_na_sg_org_user_pass" time="0.012"><system-out>Info: test_idempotent_create_na_sg_org_user_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="392" name="test_idempotent_create_na_sg_org_user_and_set_password_pass" time="0.010"><system-out>Info: test_idempotent_create_na_sg_org_user_and_set_password_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="230" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: unique_name
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="240" name="test_module_fail_when_required_args_present" time="0.019"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="252" name="test_module_fail_with_bad_unique_name" time="0.008"><system-out>Info: test_module_fail_with_bad_unique_name: unique_name must begin with &apos;user/&apos; or &apos;federated-user/&apos;
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="439" name="test_set_na_sg_org_user_password_pass" time="0.010"><system-out>Info: test_set_na_sg_org_user_password_pass: {&apos;msg&apos;: &apos;Org User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="332" name="test_update_na_sg_org_user_pass" time="0.010"><system-out>Info: test_update_na_sg_org_user_pass: {&apos;msg&apos;: &apos;Org User updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;, &apos;87654321-abcd-1234-cdef-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user.TestMyModule" file="test_na_sg_org_user.py" line="412" name="test_update_na_sg_org_user_and_set_password_pass" time="0.010"><system-out>Info: test_update_na_sg_org_user_and_set_password_pass: {&apos;msg&apos;: &apos;Org User updated; Org User password updated&apos;, &apos;resp&apos;: {&apos;federated&apos;: False, &apos;uniqueName&apos;: &apos;user/ansible-sg-demo-user1&apos;, &apos;memberOf&apos;: [&apos;12345678-abcd-1234-abcd-1234567890ab&apos;, &apos;87654321-abcd-1234-cdef-1234567890ab&apos;], &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:user/testorguser&apos;, &apos;fullName&apos;: &apos;testorguser&apos;, &apos;id&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;disable&apos;: False, &apos;accountId&apos;: &apos;12345678901234567890&apos;}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user_s3_key.TestMyModule" file="test_na_sg_org_user_s3_key.py" line="180" name="test_create_na_sg_org_user_s3_key_pass" time="0.009"><system-out>Info: test_create_na_sg_org_user_s3_key_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;secretAccessKey&apos;: &apos;abcABC+123456789012345678901234567890123&apos;, &apos;displayName&apos;: &apos;****************AB12&apos;, &apos;userUUID&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:root&apos;, &apos;accessKey&apos;: &apos;ABCDEFabcd1234567890&apos;, &apos;expires&apos;: &apos;2020-09-04T00:00:00.000Z&apos;, &apos;id&apos;: &apos;abcABC_01234-0123456789abcABCabc0123456789==&apos;, &apos;accountId&apos;: 12345678901234567000L}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user_s3_key.TestMyModule" file="test_na_sg_org_user_s3_key.py" line="220" name="test_delete_na_sg_org_user_s3_keys_pass" time="0.013"><system-out>Info: test_delete_na_sg_org_user_s3_keys_pass: {&apos;msg&apos;: &apos;Org User S3 key deleted&apos;, &apos;resp&apos;: {}, &apos;changed&apos;: True}
</system-out></testcase><testcase classname="test_na_sg_org_user_s3_key.TestMyModule" file="test_na_sg_org_user_s3_key.py" line="158" name="test_module_fail_when_required_args_missing" time="0.007"><system-out>Info: test_module_fail_when_required_args_missing: missing required arguments: api_url
</system-out></testcase><testcase classname="test_na_sg_org_user_s3_key.TestMyModule" file="test_na_sg_org_user_s3_key.py" line="199" name="test_idempotent_create_na_sg_org_user_s3_key_pass" time="0.010"><system-out>Info: test_idempotent_create_na_sg_org_user_s3_key_pass: {&apos;msg&apos;: &apos;&apos;, &apos;resp&apos;: {&apos;secretAccessKey&apos;: &apos;abcABC+123456789012345678901234567890123&apos;, &apos;displayName&apos;: &apos;****************AB12&apos;, &apos;userUUID&apos;: &apos;09876543-abcd-4321-abcd-0987654321ab&apos;, &apos;userURN&apos;: &apos;urn:sgws:identity::12345678901234567890:root&apos;, &apos;accessKey&apos;: &apos;ABCDEFabcd1234567890&apos;, &apos;expires&apos;: &apos;2020-09-04T00:00:00.000Z&apos;, &apos;id&apos;: &apos;abcABC_01234-0123456789abcABCabc0123456789==&apos;, &apos;accountId&apos;: 12345678901234567000L}, &apos;changed&apos;: False}
</system-out></testcase><testcase classname="test_na_sg_org_user_s3_key.TestMyModule" file="test_na_sg_org_user_s3_key.py" line="168" name="test_module_fail_when_required_args_present" time="0.008"><system-out>Info: test_module_fail_when_required_args_present: Induced arguments check
</system-out></testcase></testsuite></testsuites>